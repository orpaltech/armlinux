# -------------------------------------------------------------------------------------------------------------------------------------
#					Armlinux build configuration for general purpose devices
#######################################################################################################################################


# ------------------------------------------------------- Main options ----------------------------------------------------------------

DESCRIPTION="Linux image for general purpose devices"

# This configuration product version
PRODUCT_VERSION=1.0
# Leave blank to auto-generate the build number
PRODUCT_BUILD=0

# The list of boards supported by this configuration. Leave it blank to allow all boards.
#BOARDS_SUPPORTED=

# Board to build image for. Leave it blank to select a board from the list.
BOARD=${BOARD:=""}

MAINTAINER_NAME="ORPAL Technology Inc"
MAINTAINER_EMAIL="ssuloev@orpaltech.ru"

# Base directory to build extra packages in. Make sure you have enough space.
BUILD_EXTRA_DIR=${BUILD_EXTRA_DIR:="/srv/projects/orpaltech"}

# Type of the root file system (debian, busybox)
ROOTFS=${ROOTFS:=""}

#[Debian ONLY] Debian release, defaults to "trixie"
DEBIAN_RELEASE=${DEBIAN_RELEASE:=""}

# list of components to clean, comma separated: "uboot,firmware,kernel,rootfs,qt5,userland,mesa"
# if specified will override default clean targets
CLEAN=${CLEAN:=""}
# Clean targets specific to this config, in addition to common targets, space separated
CLEAN_OPTIONS=${CLEAN_OPTIONS:=""}


# ------------------------------------------------------ Toolchain options ------------------------------------------------------------

# 'yes' to force update all toolchains, leave value blank (or say 'no') for default
TOOLCHAIN_FORCE_UPDATE=${TOOLCHAIN_FORCE_UPDATE:=""}

# ---------------------------------------------------- Image creation options ---------------------------------------------------------

# destination to write an image to, options are "dev","img"; defaults to "img"
DEST_MEDIA=${DEST_MEDIA:=""}
# destination device type, possible values are "mmc","nvme"; blank defaults to "mmc"
#DEST_DEV_TYPE=
# destination Flash-card device in form /dec/sdX, required; default value depends on DEST_DEV_TYPE, 
#i.e.	/dev/mmcblk0 if DEST_DEV_TYPE=mmc
#DEST_BLOCK_DEV=

# defaults to config name, i.e "armlinux"
#DEST_IMG_PREFIX=
# defaults to product full version
#DEST_IMG_VERSION=


# -------------------------------------------------------- U-Boot options  ------------------------------------------------------------

UBOOT_RELEASE="2025.01"
UBOOT_REPO_NAME="denx"
UBOOT_REPO_URL="https://source.denx.de/u-boot/u-boot.git"
# specify a branch to checkout, or leave it blank to use "master" branch
#UBOOT_REPO_BRANCH=

# specify a git tag to checkout, or leave blank to use the release tag, or say "no" to disable checking out any tag
#UBOOT_REPO_TAG=

# say "yes" to completely disable u-boot patches
#UBOOT_PATCH_DISABLE=

# It is a directory located in 'patch/u-boot/${UBOOT_REPO_NAME}' containing high-priority patches to apply.
# High-priority patches have precedence over normal-priority patches (in case of a file name collision).
# Leave it blank to make framework use the release-specific directory, i.e. 'patch/u-boot/${UBOOT_REPO_NAME}/${UBOOT_RELEASE}'.
#UBOOT_PATCH_HIGH_PRIORITY_DIR=

#[RaspberryPi ONLY] "yes" sets U-boot to use device-tree prepared by first-stage bootloader
BOOTSCR_USE_1STAGE_DT=yes

# --------------------------------------------------------- Kernel options -------------------------------------------------------------

KERNEL_VER_MAJOR=6
KERNEL_VER_MINOR=14
KERNEL_VER_BUILD=-rc4
KERNEL_REPO_NAME="stable"
KERNEL_REPO_URL="git://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git"
#KERNEL_REPO_NAME="next"
#KERNEL_REPO_URL="git://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git"

# specify a branch to checkout, or leave it blank to use "master" branch
#KERNEL_REPO_BRANCH=

# specify a tag to checkout, leave blank to use the release tag, or say "no" to disable checking out any tag
#KERNEL_REPO_TAG=
#KERNEL_REPO_TAG="next-20201118"

# say "yes" to completely disable kernel patches
#KERNEL_PATCH_DISABLE=

# It is a directory located under 'patch/kernel/${KERNEL_REPO_NAME}' containing high-priority patches to apply.
# High-priority patches have precedence over normal-priority patches (in case of a filename collision).
# Leave it blank to let framework use the release-specific directory, i.e. 'patch/kernel/${KERNEL_REPO_NAME}/v${KERNEL_VER_MAJOR}.${KERNEL_VER_MINOR}'.
#KERNEL_PATCH_HIGH_PRIORITY_DIR=

# say "yes" to deploy kernel headers, or leave it blank for default behavior
#KERNEL_INSTALL_HEADERS=

# say "yes" to deploy kernel sources to /usr/src/linux, or leave it blank for default behavior
KERNEL_INSTALL_SOURCE=no

#KERNEL_MAKE_DEB_PKG=

#KERNEL_DEB_COMPRESS=

# say "yes" to enable kbuild verbose output
#KERNEL_VERBOSE=

# ------------------------------------------------------- Logging options -------------------------------------------------------------

# Enable DRM debug output: 0x0 - no output, .., 0x3f - verbose output
DRM_DEBUG=0x01

DMESG_BUF_LEN=65536

# -------------------------------------------------- Network and security options -----------------------------------------------------

# The global Ethernet switch, say "yes" to enable wired adapters (if supported by your board)
ENABLE_ETHERNET=${ENABLE_ETHERNET:=yes}
# The global Wi-Fi switch, say "yes" to enable Wi-Fi (if supported by your board)
ENABLE_WLAN=${ENABLE_WLAN:="yes"}
# For the sake of security, use a "wlan" file to store your WLAN connection info
#WLAN_SSID=
#WLAN_PASSWD=

# List of network interfaces (comma-separated) to shutdown at boot time
#SHUTDOWN_NETWORK_IFACES=

# Desired host name, or blank to automatically generate it
HOST_NAME=

SSH_KEY_PATH=/home/sergey/.ssh/id_rsa

# "yes" to create a user
ENABLE_USER=yes
USER_NAME=sergey
USER_ADMIN=yes
USER_GROUPS=dialout
PASSWORD=armlinux2025

# --------------------------------------------------- Image customization options -----------------------------------------------------

# if specified, the framework try to get packages from the mirror server
GIT_MIRROR_ROOT=${GIT_MIRROR_ROOT:="git@hanni-ubuntu-desktop:/srv/projects3/git"}


# ------------------- [Debian ONLY =>]
APT_SERVER="deb.debian.org"

DEBIAN_MINBASE=no
DEBIAN_NONFREE=yes

# Extra packages to install
#APT_CONFIG_INCLUDES=
#-------------------- [<= Debian ONLY]


# ------------------- [Busybox ONLY =>]
# The desired libc flavor to install. The supported libc are: gnu (default), musl
BB_LIBC=
#-------------------- [<= Busybox ONLY]


ENABLE_REDUCE=yes
ENABLE_IPTABLES=no
ENABLE_IFNAMES=no

ENABLE_SSHD=${ENABLE_SSHD:=yes}
ENABLE_SOUND=${ENABLE_SOUND:=yes}
ENABLE_BTH=${ENABLE_BTH:=no}
ENABLE_SDR=${ENABLE_SDR:=no}
ENABLE_NTP=${ENABLE_NTP:=yes}
ENABLE_MESA=${ENABLE_MESA:=no}

# ---------------------------------------------------- Miscellaneous options ----------------------------------------------------------
DEFLOCAL="ru_RU.UTF-8"
