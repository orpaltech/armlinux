# -------------------------------------------------------------------------------------------------------------------------------------
#						Armlinux build configuration for AA-PI
#######################################################################################################################################


# ------------------------------------------------------- Main options ----------------------------------------------------------------

DESCRIPTION="SD-card image for ORPALTECH AA-PI"

# This configuration product version
PROD_VERSION="3.0"
PROD_BUILD="0"

# Board to build image for. Leave it blank to select a board from the list.
BOARD=${BOARD:=""}

MAINTAINER_NAME="ORPAL Technology, Inc."
MAINTAINER_EMAIL="ssuloev@orpaltech.com"

# Base directory to build extra packages in. Make sure you have enough space.
BUILD_EXTRA_DIR=${BUILD_EXTRA_DIR:="/home/sergey/Projects/orpaltech"}

# Debian release: use "stretch" or "jessie"
DEBIAN_RELEASE=${DEBIAN_RELEASE:="stretch"}

# list of components to clean, comma separated: "uboot,firmware,kernel,rootfs,qt5,userland,mesa"
CLEAN=${CLEAN:=""}


# ------------------------------------------------------ Toolchain options ------------------------------------------------------------

TOOLCHAIN_VENDOR="linaro"
# toolchains versions for kernel, uboot and remaining tools
DEFAULT_TOOLCHAIN_VER=7
KERNEL_TOOLCHAIN_VER=7
UBOOT_TOOLCHAIN_VER=7

# say 'yes' to force update all toolchains, otherwise leave blank (or say 'no') for default
TOOLCHAIN_FORCE_UPDATE=${TOOLCHAIN_FORCE_UPDATE:=""}

# ---------------------------------------------------- Image creation options ---------------------------------------------------------

# destination to write a image to, possible values are "sd" or "img"
DEST_DEV_TYPE=${DEST_DEV_TYPE:="img"}

# destination SD-card device; required if DEST_DEV_TYPE="sd"; 
# it can be a board-specific value, so make sure it is overriden in a board config
DEST_BLOCK_DEV=${DEST_BLOCK_DEV:="/dev/mmcblk1"}

# leave blank to use default values
DEST_IMG_PREFIX=
DEST_VERSION=

# ------------------------------------------------------ U-Boot source code -----------------------------------------------------------

UBOOT_RELEASE="v2021.07"
UBOOT_REPO_NAME="denx"
UBOOT_REPO_URL="https://gitlab.denx.de/u-boot/u-boot.git"
# you can directly specify a branch to checkout, or leave it blank to use master
UBOOT_REPO_BRANCH=
# you can directly specify a git tag to checkout, or say "no" to disable checking out the default tag
UBOOT_REPO_TAG=

# say "yes" to disable u-boot patches
UBOOT_PATCH_DISABLE=

# It is a directory located in 'patch/u-boot' containing high-priority patches to apply.
# A high-priority patch has precedence over a normal-priority patch (in case of a file name collision).
# Leave blank to make the framework search for a release-specific directory, i.e. 'patch/u-boot/v2020.10'.
UBOOT_PATCH_HIGH_PRIORITY_DIR=


# ------------------------------------------------------ Kernel source code -----------------------------------------------------------

KERNEL_VER_MAJOR=5
KERNEL_VER_MINOR=14
KERNEL_VER_BUILD=""
KERNEL_REPO_NAME="stable"
KERNEL_REPO_URL="git://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git"
# you can directly specify a branch to checkout, or leave it blank to use master
KERNEL_REPO_BRANCH=
# you can directly specify a git tag to checkout, or say "no" to disable checking out the default tag
KERNEL_REPO_TAG=

# say "yes" to disable kernel patches
KERNEL_PATCH_DISABLE=

# This is a directory located under 'patch/kernel/${KERNEL_REPO_NAME}' containing high-priority patches to apply.
# High-priority patches have precedence over normal-priority patches (only in case of a file name collision).
# Leave it blank to make the framework search for a release-specific directory, i.e. 'patch/kernel/${KERNEL_REPO_NAME}/v4.20'.
KERNEL_PATCH_HIGH_PRIORITY_DIR=

# say "yes" to force deploy kernel sources to /usr/src/linux, or leave it blank for default
KERNEL_INSTALL_SOURCE="no"

KERNEL_MAKE_DEB_PKG=""

# say "yes" to enable kbuild verbose output
KERNEL_VERBOSE=""

# ------------------------------------------------------- Logging options -------------------------------------------------------------

# Enable DRM debug output, the value range: 0x0 - no output,.., 0x3f - verbose output
DRM_DEBUG=0x1f

DMESG_BUF_LEN=65536

# allows reading kernel boot messages by inserting a short delay after each one
BOOT_PRINTK_DELAY=0

# ------------------------------------------------------- Network options -------------------------------------------------------------

# The global Wi-Fi switch, say "yes" to enable Wi-Fi (if supported by your board)
ENABLE_WLAN="yes"
# For sake of security, use a file named "wlan" to store WLAN connection info
WLAN_SSID=
WLAN_PASSWD=

# List of network interfaces comma-delimited to shutdown at boot time
SHUTDOWN_NETWORK_IFACES=

# Desired host name, or blank to automatically generate it
HOST_NAME=

# -------------------------------------------------- Network and security options -----------------------------------------------------

# say "yes" to create an extra-user
ENABLE_USER="no"
USER_NAME="pi"
PASSWORD="armlinux"

# ------------------------------------------------ Options to control Debian install --------------------------------------------------

APT_SERVER="ftp.ru.debian.org"
ENABLE_REDUCE="yes"
DEBIAN_MINBASE="no"
DEBIAN_NONFREE="yes"
ENABLE_SSHD="yes"
ENABLE_IPTABLES="no"
ENABLE_IPV6="no"
ENABLE_IFNAMES="no"
# X11 headers are required for Wayland headers
ENABLE_X11="no"
ENABLE_SOUND="yes"
ENABLE_GDB="no"

# Extra packages to install
APT_CONFIG_INCLUDES="zlib1g-dev,libzstd-dev,libpng-dev,libjpeg-dev,libtiff5-dev,libfontconfig1-dev,libfreetype6-dev,libharfbuzz-dev,libicu-dev,libudev-dev,libi2c-dev,libfftw3-dev"

# ---------------------------------------------------- Miscellaneous options ----------------------------------------------------------

# QT5_UPDATE_SOURCES=yes
# QT5_FORCE_REBUILD=yes
