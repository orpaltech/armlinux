# -------------------------------------------------------------------------------------------------------------------------------------
#						Armlinux build configuration 
#######################################################################################################################################


# ------------------------------------------------------- Main options ----------------------------------------------------------------

DESCRIPTION="ORPALTECH AA-PI SD-card image"

# armlinux build version
VERSION="1.3"

# board to build an image for; leave it blank to select a board from the list
BOARD=${BOARD:=""}

MAINTAINER_NAME="ORPAL Technology Inc"
MAINTAINER_EMAIL="ssuloev@orpaltech.com"

# base directory to build extra packages in; make sure you have enough space
BUILD_EXTRA_DIR=${BUILD_EXTRA_DIR:="/home/sergey/Projects/orpaltech"}

# debian release: use "stretch", "jessie", or blank (default)
DEBIAN_RELEASE=${DEBIAN_RELEASE:="stretch"}

# clean deb-packages, possible options (comma separated): "uboot,firmware,kernel,rootfs,qt5,userland"
CLEAN=${CLEAN:=""}


# ------------------------------------------------------ Toolchain options ------------------------------------------------------------

# default toolchains for armhf & aarch64; path is relative to the toolchain directory
DEFAULT_TOOLCHAIN_ARMHF="7.3/arm-linux-gnueabihf/gcc-linaro-7.3.1-2018.05-x86_64_arm-linux-gnueabihf/bin/arm-linux-gnueabihf-"
DEFAULT_TOOLCHAIN_AARCH64="7.3/aarch64-linux-gnu/gcc-linaro-7.3.1-2018.05-x86_64_aarch64-linux-gnu/bin/aarch64-linux-gnu-"

# say 'yes' to update toolchains, leave it blank to allow default behavior
TOOLCHAIN_FORCE_UPDATE=""

# ---------------------------------------------------- Image creation options ---------------------------------------------------------

# destination to write a image to, possible values are "sd" or "img"
DEST_DEV_TYPE="img"

# destination SD-card device; required if DEST_DEV_TYPE="sd"
DEST_BLOCK_DEV="/dev/mmcblk0"

DEST_IMG_PREFIX="aapi"
DEST_VERSION="${VERSION}"


# ------------------------------------------------------ U-Boot source code -----------------------------------------------------------

UBOOT_REPO_NAME="denx"
UBOOT_REPO_BRANCH="master"
UBOOT_REPO_TAG="v2018.11"
UBOOT_REPO_URL="git://git.denx.de/u-boot.git"

# say "yes" to disable u-boot patches
UBOOT_PATCH_DISABLE="no"

# directory, located in 'patch/u-boot', containing high-priority patches to apply;
# high-priority patches have precedence over normal-priority patches with the same name;
# if the value set blank then the directory named "${UBOOT_REPO_TAG}" will be searched for
UBOOT_PATCH_HIGH_PRIORITY_DIR=""


# ------------------------------------------------------ Kernel source code -----------------------------------------------------------

KERNEL_REPO_NAME="stable"
KERNEL_REPO_URL="git://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git"
KERNEL_REPO_BRANCH="master"
# KERNEL_RELEASE="v5.0"
# KERNEL_REPO_TAG="${KERNEL_RELEASE}-rc6"
KERNEL_RELEASE="v4.20"
KERNEL_REPO_TAG="${KERNEL_RELEASE}.13"

# say "yes" to disable kernel patches
KERNEL_PATCH_DISABLE="no"

# directory, located in 'patch/kernel/${KERNEL_REPO_NAME}', containing high-priority patches to apply;
# high-priority patches have precedence over normal-priority patches with the same name located in 
# the directory 'patch/kernel/${KERNEL_REPO_NAME}';
# if the value set blank then the directory named "${KERNEL_RELEASE}" will be searched for
KERNEL_PATCH_HIGH_PRIORITY_DIR=""

# say "yes" to deploy kernel sources to /usr/src/linux; leave it blank for default
KERNEL_INSTALL_SOURCE="no"


# ------------------------------------------------------- Logging options -------------------------------------------------------------

# say "yes" to enable kbuild verbose output
KBUILD_VERBOSE="no"


# ------------------------------------------------------ Wireless settings ------------------------------------------------------------

# The global Wi-Fi switch, say "yes" to enable Wi-Fi support (if only supported by the board)
ENABLE_WIRELESS="yes"
WIRELESS_SSID="HANNI-ARCHERC7"
WIRELESS_PASSWD="jxtymckj;ysqgfhjkm1"


# -------------------------------------------------- Network and security options -----------------------------------------------------

# leave it blank to automatically generate the host name
HOST_NAME=""

# say "yes" if you want to create an extra-user
ENABLE_USER="no"
USER_NAME="pi"
PASSWORD="armlinux"

# listed networks will be disabled (supported values: wlan0, eth0)
DISABLE_NETWORK_IFACES=""

ENABLE_REDUCE="yes"
ENABLE_MINBASE="no"
ENABLE_NONFREE="no"
ENABLE_SSHD="yes"
ENABLE_IPTABLES="no"
ENABLE_IPV6="no"
ENABLE_IFNAMES="no"
# X11 headers are required for Wayland headers
ENABLE_X11="yes"
ENABLE_SOUND="yes"

APT_EXTRA_PACKAGES="zlib1g-dev,libpng-dev,libjpeg-dev,libfontconfig1-dev,libfreetype6-dev,libudev-dev,libi2c-dev,libfftw3-dev"
# TODO: delete after testing
APT_EXTRA_PACKAGES="${APT_EXTRA_PACKAGES},cmake"
