From 86f654606176b8ae8757a5656c6a9577cd88d414 Mon Sep 17 00:00:00 2001
From: Sergey Suloev <ssuloev@orpaltech.com>
Date: Thu, 12 Nov 2020 19:45:24 +0300
Subject: [PATCH] drm/sun4i: Testing with RGB-panel

---
 drivers/gpu/drm/panel/panel-simple.c |  9 +++++++++
 drivers/gpu/drm/sun4i/sun4i_rgb.c    | 10 ++++++++--
 drivers/gpu/drm/sun4i/sun4i_tcon.c   |  6 ++++++
 3 files changed, 23 insertions(+), 2 deletions(-)

diff --git a/drivers/gpu/drm/panel/panel-simple.c b/drivers/gpu/drm/panel/panel-simple.c
index eabc9e4..48bd5da 100644
--- a/drivers/gpu/drm/panel/panel-simple.c
+++ b/drivers/gpu/drm/panel/panel-simple.c
@@ -232,6 +232,8 @@ static int panel_simple_disable(struct drm_panel *panel)
 {
 	struct panel_simple *p = to_panel_simple(panel);
 
+	dev_dbg(panel->dev, "%s\n", __func__);
+
 	if (!p->enabled)
 		return 0;
 
@@ -247,6 +249,8 @@ static int panel_simple_unprepare(struct drm_panel *panel)
 {
 	struct panel_simple *p = to_panel_simple(panel);
 
+	dev_dbg(panel->dev, "%s\n", __func__);
+
 	if (!p->prepared)
 		return 0;
 
@@ -294,6 +298,8 @@ static int panel_simple_prepare(struct drm_panel *panel)
 	int err;
 	int hpd_asserted;
 
+	dev_dbg(panel->dev, "%s\n", __func__);
+
 	if (p->prepared)
 		return 0;
 
@@ -340,6 +346,8 @@ static int panel_simple_enable(struct drm_panel *panel)
 {
 	struct panel_simple *p = to_panel_simple(panel);
 
+	dev_dbg(panel->dev, "%s\n", __func__);
+
 	if (p->enabled)
 		return 0;
 
@@ -1174,6 +1182,7 @@ static const struct panel_desc bananapi_s070wv20_ct16 = {
 		.width = 154,
 		.height = 86,
 	},
+	.connector_type = DRM_MODE_CONNECTOR_DPI
 };
 
 static const struct drm_display_mode boe_hv070wsa_mode = {
diff --git a/drivers/gpu/drm/sun4i/sun4i_rgb.c b/drivers/gpu/drm/sun4i/sun4i_rgb.c
index 5a7d439..e93181b 100644
--- a/drivers/gpu/drm/sun4i/sun4i_rgb.c
+++ b/drivers/gpu/drm/sun4i/sun4i_rgb.c
@@ -6,6 +6,8 @@
  * Maxime Ripard <maxime.ripard@free-electrons.com>
  */
 
+#define DEBUG
+
 #include <linux/clk.h>
 
 #include <drm/drm_atomic_helper.h>
@@ -195,6 +197,8 @@ int sun4i_rgb_init(struct drm_device *drm, struct sun4i_tcon *tcon)
 	struct sun4i_rgb *rgb;
 	int ret;
 
+	dev_dbg(drm->dev, "%s\n", __func__);
+
 	rgb = devm_kzalloc(drm->dev, sizeof(*rgb), GFP_KERNEL);
 	if (!rgb)
 		return -ENOMEM;
@@ -225,14 +229,14 @@ int sun4i_rgb_init(struct drm_device *drm, struct sun4i_tcon *tcon)
 					 &sun4i_rgb_con_helper_funcs);
 		ret = drm_connector_init(drm, &rgb->connector,
 					 &sun4i_rgb_con_funcs,
-					 DRM_MODE_CONNECTOR_Unknown);
+					 rgb->panel->connector_type);
 		if (ret) {
 			dev_err(drm->dev, "Couldn't initialise the rgb connector\n");
 			goto err_cleanup_connector;
 		}
 
 		drm_connector_attach_encoder(&rgb->connector,
-						  &rgb->encoder);
+					     &rgb->encoder);
 
 		ret = drm_panel_attach(rgb->panel, &rgb->connector);
 		if (ret) {
@@ -249,6 +253,8 @@ int sun4i_rgb_init(struct drm_device *drm, struct sun4i_tcon *tcon)
 		}
 	}
 
+	dev_dbg(drm->dev, "%s success\n", __func__);
+
 	return 0;
 
 err_cleanup_connector:
diff --git a/drivers/gpu/drm/sun4i/sun4i_tcon.c b/drivers/gpu/drm/sun4i/sun4i_tcon.c
index e40c542..af30153 100644
--- a/drivers/gpu/drm/sun4i/sun4i_tcon.c
+++ b/drivers/gpu/drm/sun4i/sun4i_tcon.c
@@ -6,6 +6,8 @@
  * Maxime Ripard <maxime.ripard@free-electrons.com>
  */
 
+#define DEBUG
+
 #include <linux/component.h>
 #include <linux/ioport.h>
 #include <linux/module.h>
@@ -512,6 +514,8 @@ static void sun4i_tcon0_mode_set_rgb(struct sun4i_tcon *tcon,
 	u8 clk_delay;
 	u32 val = 0;
 
+	dev_dbg(tcon->dev, "%s\n", __func__);
+
 	WARN_ON(!tcon->quirks->has_channel_0);
 
 	tcon->dclk_min_div = tcon->quirks->dclk_min_div;
@@ -1116,6 +1120,8 @@ static int sun4i_tcon_bind(struct device *dev, struct device *master,
 	bool has_lvds_rst, has_lvds_alt, can_lvds;
 	int ret;
 
+	dev_dbg(dev, "%s\n", __func__);
+
 	engine = sun4i_tcon_find_engine(drv, dev->of_node);
 	if (IS_ERR(engine)) {
 		dev_err(dev, "Couldn't find matching engine\n");
-- 
2.25.1

