From ab4030459b62627a46554c7a166c2d9edd608435 Mon Sep 17 00:00:00 2001
From: Sergey Suloev <ssuloev@orpaltech.com>
Date: Sun, 9 Feb 2020 19:31:51 +0300
Subject: [PATCH] sun50i-a64: Add DT-overlays

---
 arch/arm64/boot/dts/allwinner/Makefile        |   2 +
 .../boot/dts/allwinner/overlays/Makefile      |  24 ++++
 .../overlays/README.sun50i-a64-overlays       |   1 +
 .../overlays/sun50i-a64-audioinjector-pi.dts  |  43 ++++++
 .../overlays/sun50i-a64-ertft0356-drm.dts     | 123 ++++++++++++++++++
 .../overlays/sun50i-a64-fixup.scr-cmd         |  69 ++++++++++
 .../overlays/sun50i-a64-gpio-reset.dts        |  28 ++++
 .../overlays/sun50i-a64-gy-pcm5102-sound.dts  |  34 +++++
 .../allwinner/overlays/sun50i-a64-no-hdmi.dts |  20 +++
 .../overlays/sun50i-a64-nrf24-spi.dts         |  86 ++++++++++++
 .../allwinner/overlays/sun50i-a64-r_pwm.dts   |  13 ++
 .../overlays/sun50i-a64-waveshare35-drm.dts   |  70 ++++++++++
 12 files changed, 513 insertions(+)
 create mode 100644 arch/arm64/boot/dts/allwinner/overlays/Makefile
 create mode 100644 arch/arm64/boot/dts/allwinner/overlays/README.sun50i-a64-overlays
 create mode 100644 arch/arm64/boot/dts/allwinner/overlays/sun50i-a64-audioinjector-pi.dts
 create mode 100644 arch/arm64/boot/dts/allwinner/overlays/sun50i-a64-ertft0356-drm.dts
 create mode 100644 arch/arm64/boot/dts/allwinner/overlays/sun50i-a64-fixup.scr-cmd
 create mode 100644 arch/arm64/boot/dts/allwinner/overlays/sun50i-a64-gpio-reset.dts
 create mode 100644 arch/arm64/boot/dts/allwinner/overlays/sun50i-a64-gy-pcm5102-sound.dts
 create mode 100644 arch/arm64/boot/dts/allwinner/overlays/sun50i-a64-no-hdmi.dts
 create mode 100644 arch/arm64/boot/dts/allwinner/overlays/sun50i-a64-nrf24-spi.dts
 create mode 100644 arch/arm64/boot/dts/allwinner/overlays/sun50i-a64-r_pwm.dts
 create mode 100644 arch/arm64/boot/dts/allwinner/overlays/sun50i-a64-waveshare35-drm.dts

diff --git a/arch/arm64/boot/dts/allwinner/Makefile b/arch/arm64/boot/dts/allwinner/Makefile
index d241802..cd5bb49 100644
--- a/arch/arm64/boot/dts/allwinner/Makefile
+++ b/arch/arm64/boot/dts/allwinner/Makefile
@@ -27,3 +27,5 @@ dtb-$(CONFIG_ARCH_SUNXI) += sun50i-h6-orangepi-lite2.dtb
 dtb-$(CONFIG_ARCH_SUNXI) += sun50i-h6-orangepi-one-plus.dtb
 dtb-$(CONFIG_ARCH_SUNXI) += sun50i-h6-pine-h64.dtb
 dtb-$(CONFIG_ARCH_SUNXI) += sun50i-h6-tanix-tx6.dtb
+
+subdir-y	:= overlays
diff --git a/arch/arm64/boot/dts/allwinner/overlays/Makefile b/arch/arm64/boot/dts/allwinner/overlays/Makefile
new file mode 100644
index 0000000..a5b0a97
--- /dev/null
+++ b/arch/arm64/boot/dts/allwinner/overlays/Makefile
@@ -0,0 +1,24 @@
+# SPDX-License-Identifier: GPL-2.0
+ifeq ($(CONFIG_OF_OVERLAY),y)
+
+dtbo-$(CONFIG_ARCH_SUNXI) += \
+	sun50i-a64-audioinjector-pi.dtbo \
+	sun50i-a64-ertft0356-drm.dtbo \
+	sun50i-a64-gpio-reset.dtbo \
+	sun50i-a64-gy-pcm5102-sound.dtbo \
+	sun50i-a64-nrf24-spi.dtbo \
+	sun50i-a64-r_pwm.dtbo \
+	sun50i-a64-no-hdmi.dtbo \
+	sun50i-a64-waveshare35-drm.dtbo
+
+scr-$(CONFIG_ARCH_SUNXI) += \
+	sun50i-a64-fixup.scr
+
+dtbotxt-$(CONFIG_ARCH_SUNXI) += \
+	README.sun50i-a64-overlays
+
+targets	+= $(dtbo-y) $(scr-y) $(dtbotxt-y)
+
+endif
+
+extra-y	:= $(dtbo-y) $(scr-y) $(dtbotxt-y)
diff --git a/arch/arm64/boot/dts/allwinner/overlays/README.sun50i-a64-overlays b/arch/arm64/boot/dts/allwinner/overlays/README.sun50i-a64-overlays
new file mode 100644
index 0000000..79dffee
--- /dev/null
+++ b/arch/arm64/boot/dts/allwinner/overlays/README.sun50i-a64-overlays
@@ -0,0 +1 @@
+# overlays for sun50i-a64 (Allwinner A64)
diff --git a/arch/arm64/boot/dts/allwinner/overlays/sun50i-a64-audioinjector-pi.dts b/arch/arm64/boot/dts/allwinner/overlays/sun50i-a64-audioinjector-pi.dts
new file mode 100644
index 0000000..25e9d8e
--- /dev/null
+++ b/arch/arm64/boot/dts/allwinner/overlays/sun50i-a64-audioinjector-pi.dts
@@ -0,0 +1,43 @@
+/dts-v1/;
+/plugin/;
+
+/ {
+	compatible = "allwinner,sun50i-a64";
+
+	fragment@0 {
+		target = <&i2s0>;
+		__overlay__ {
+			pinctrl-names = "default";
+			pinctrl-0 = <&i2s0_pins_bclk &i2s0_pins_lrck &i2s0_pins_do0 &i2s0_pins_di>;
+			status = "okay";
+		};
+	};
+
+	fragment@1 {
+		target = <&r_i2c>;
+		__overlay__ {
+			#address-cells = <1>;
+			#size-cells = <0>;
+			status = "okay";
+
+			wm8731: wm8731@1a {
+				#sound-dai-cells = <0>;
+				compatible = "wlf,wm8731";
+				reg = <0x1a>;
+				status = "okay";
+			};
+		};
+	};
+
+	fragment@2 {
+		target-path = "/soc/";
+		__overlay__ {
+			sound-ai {
+				compatible = "flatmax,audioinjector-pi";
+				cpu-node = <&i2s0>;
+				codec-node = <&wm8731>;
+				status = "okay";
+                        };
+                };
+	};
+};
diff --git a/arch/arm64/boot/dts/allwinner/overlays/sun50i-a64-ertft0356-drm.dts b/arch/arm64/boot/dts/allwinner/overlays/sun50i-a64-ertft0356-drm.dts
new file mode 100644
index 0000000..4de80fc
--- /dev/null
+++ b/arch/arm64/boot/dts/allwinner/overlays/sun50i-a64-ertft0356-drm.dts
@@ -0,0 +1,123 @@
+#include <dt-bindings/gpio/gpio.h>
+#include <dt-bindings/interrupt-controller/irq.h>
+
+/dts-v1/;
+/plugin/;
+
+/ {
+	compatible = "allwinner,sun50i-a64";
+
+	fragment@0 {
+		target = <&pio>;
+		__overlay__ {
+			ertft_tp_pins: ertft_tp@10 {
+                                pins = "PB0";		/* pin 11 */
+                                function = "gpio_in";
+                        };
+
+			ertft_pins_rst: ertft@11 {
+                                pins = "PB1";		/* pin 22 */
+                                function = "gpio_out";
+                        };
+
+			ertft_pins_dc: ertft@77 {
+                                pins = "PH7";		/* pin 18 */
+                                function = "gpio_out";
+                        };
+
+			ertft_pins_bl: ertft@76 {
+				pins = "PH6";		/* pin 16 */
+				function = "gpio_out";
+			};
+		};
+	};
+
+	fragment@1 {
+		target-path = "/soc/";
+		__overlay__ {
+			ertft_backlight: backlight@76 {
+				compatible = "gpio-backlight";
+				pinctrl-names = "default";
+				pinctrl-0 = <&ertft_pins_bl>;
+				gpios = <&pio 7 6 GPIO_ACTIVE_HIGH>;	/* PH6 */
+			};
+		};
+	};
+
+	fragment@2 {
+		target = <&spi0>;
+		__overlay__ {
+			/* needed to avoid dtc warning */
+			#address-cells = <1>;
+			#size-cells = <0>;
+
+			ertft {
+				compatible = "eastrising,er-tft035-6",
+					     "ilitek,ili9488";
+				reg = <0>;
+				spi-max-frequency = <20000000>;
+
+				pinctrl-names = "default";
+				pinctrl-0 = <&ertft_pins_rst>, <&ertft_pins_dc>;
+
+				reset-gpios = <&pio 1 1 GPIO_ACTIVE_HIGH>;	/* PB1 */
+				dc-gpios = <&pio 7 7 GPIO_ACTIVE_HIGH>;		/* PH7 */
+				rotation = <90>;
+				backlight = <&ertft_backlight>;
+				status = "disabled";
+			};
+		};
+	};
+
+	fragment@3 {
+		target = <&spi1>;
+		__overlay__ {
+			/* needed to avoid dtc warning */
+			#address-cells = <1>;
+			#size-cells = <0>;
+
+			ertft {
+				compatible = "eastrising,er-tft035-6",
+					     "ilitek,ili9488";
+				reg = <0>;
+				spi-max-frequency = <20000000>;
+
+				pinctrl-names = "default";
+				pinctrl-0 = <&ertft_pins_rst>, <&ertft_pins_dc>;
+
+				reset-gpios = <&pio 1 1 GPIO_ACTIVE_HIGH>;	/* PB1 */
+				dc-gpios = <&pio 7 7 GPIO_ACTIVE_HIGH>;		/* PH7 */
+				rotation = <90>;
+				backlight = <&ertft_bl>;
+				status = "disabled";
+			};
+		};
+	};
+
+	fragment@4 {
+		target = <&i2c2>;
+		__overlay__ {
+			/* needed to avoid dtc warning */
+			#address-cells = <1>;
+			#size-cells = <0>;
+
+			ertft_tp {
+				compatible = "focaltech,ft6236";
+				reg = <0x38>;
+
+				pinctrl-names = "default";
+                                pinctrl-0 = <&ertft_tp_pins>;
+
+				interrupt-parent = <&pio>;
+				interrupts = <1 0 IRQ_TYPE_EDGE_FALLING>; /* PB0 */
+
+				touchscreen-size-x = <320>;
+				touchscreen-size-y = <480>;
+				/*touchscreen-inverted-x;*/
+				/*touchscreen-inverted-y;*/
+				touchscreen-swapped-x-y;
+				status = "disabled";
+			};
+		};
+	};
+};
diff --git a/arch/arm64/boot/dts/allwinner/overlays/sun50i-a64-fixup.scr-cmd b/arch/arm64/boot/dts/allwinner/overlays/sun50i-a64-fixup.scr-cmd
new file mode 100644
index 0000000..d7c8f9a
--- /dev/null
+++ b/arch/arm64/boot/dts/allwinner/overlays/sun50i-a64-fixup.scr-cmd
@@ -0,0 +1,69 @@
+# overlays fixup script
+# implements (or rather substitutes) overlay arguments functionality
+# using u-boot scripting, environment variables and "fdt" command
+
+if test -n "${param_nrf24_spi_bus}"; then
+	test "${param_nrf24_spi_bus}" = "0" && setenv tmp_spi_path "spi@1c68000"
+	test "${param_nrf24_spi_bus}" = "1" && setenv tmp_spi_path "spi@1c69000"
+
+	fdt set /soc/${tmp_spi_path} status "okay"
+	fdt set /soc/${tmp_spi_path}/nrf24 status "okay"
+
+	if test -n "${param_nrf24_max_freq}"; then
+		fdt set /soc/${tmp_spi_path}/nrf24 spi-max-frequency "<${param_nrf24_max_freq}>"
+	fi
+	if test -n "${param_nrf24_spi_cs}"; then
+		fdt set /soc/${tmp_spi_path}/nrf24 reg "<${param_nrf24_spi_cs}>"
+	fi
+
+	env delete tmp_spi_path
+fi
+
+if test "${param_waveshare35_spi_bus}" = "0"; then
+	setenv tmp_spi_path "spi@1c68000"
+
+	fdt set /soc/${tmp_spi_path} status "okay"
+	fdt set /soc/${tmp_spi_path}/ws35-lcd@0 status "okay"
+	fdt set /soc/${tmp_spi_path}/ws35-ts@1 status "okay"
+
+	if test -n "${param_waveshare35_max_freq}"; then
+		fdt set /soc/${tmp_spi_path}/ws35-lcd@0 spi-max-frequency "<${param_waveshare35_max_freq}>"
+	fi
+	if test -n "${param_waveshare35_rotation}"; then
+		fdt set /soc/${tmp_spi_path}/ws35-lcd@0 rotation "<${param_waveshare35_rotation}>"
+	fi
+
+	env delete tmp_spi_path
+fi
+
+if test -n "${param_ertft_spi_bus}"; then
+	test "${param_ertft_spi_bus}" = "0" && setenv tmp_spi_path "spi@1c68000"
+	test "${param_ertft_spi_bus}" = "1" && setenv tmp_spi_path "spi@1c69000"
+
+	setenv tmp_i2c_path "i2c@1c2b400"
+
+	fdt set /soc/${tmp_spi_path} status "okay"
+	fdt set /soc/${tmp_spi_path}/ertft status "okay"
+	fdt set /soc/${tmp_i2c_path} status "okay"
+	fdt set /soc/${tmp_i2c_path}/ertft_tp status "okay"
+
+	if test -n "${param_ertft_max_freq}"; then
+		fdt set /soc/${tmp_spi_path}/ertft spi-max-frequency "<${param_ertft_max_freq}>"
+	fi
+	if test -n "${param_ertft_rotation}"; then
+		fdt set /soc/${tmp_spi_path}/ertft rotation "<${param_ertft_rotation}>"
+	fi
+
+	if test "${param_ertft_tp_inverted_x}" = "1"; then
+		fdt set /soc/${tmp_i2c_path}/ertft_tp touchscreen-inverted-x
+	fi
+	if test "${param_ertft_tp_inverted_y}" = "1"; then
+		fdt set /soc/${tmp_i2c_path}/ertft_tp touchscreen-inverted-y
+	fi
+	if test "${param_ertft_tp_swapped_x_y}" = "1"; then
+		fdt set /soc/${tmp_i2c_path}/ertft_tp touchscreen-swapped-x-y
+	fi
+
+	env delete tmp_spi_path
+	env delete tmp_i2c_path
+fi
diff --git a/arch/arm64/boot/dts/allwinner/overlays/sun50i-a64-gpio-reset.dts b/arch/arm64/boot/dts/allwinner/overlays/sun50i-a64-gpio-reset.dts
new file mode 100644
index 0000000..8d68969
--- /dev/null
+++ b/arch/arm64/boot/dts/allwinner/overlays/sun50i-a64-gpio-reset.dts
@@ -0,0 +1,28 @@
+#include <dt-bindings/gpio/gpio.h>
+
+/dts-v1/;
+/plugin/;
+
+/ {
+	compatible = "allwinner,sun50i-a64";
+
+	fragment@0 {
+		target-path = "/soc/";
+		__overlay__ {
+			rstc_gpio: rstc-gpio@0 {
+				compatible = "linux,gpio-reset-controller";
+				#reset-cells = <1>;
+
+				lcd {
+					gpios = <&r_pio 0 12 GPIO_ACTIVE_LOW>; /*PL12*/
+					duration-ms = <20 2 10>;
+				};
+
+				ctp {
+					gpios = <&pio 1 2 GPIO_ACTIVE_LOW>; /*PB2*/
+					duration-ms = <20 2 10>;
+				};
+			};
+		};
+	};
+};
diff --git a/arch/arm64/boot/dts/allwinner/overlays/sun50i-a64-gy-pcm5102-sound.dts b/arch/arm64/boot/dts/allwinner/overlays/sun50i-a64-gy-pcm5102-sound.dts
new file mode 100644
index 0000000..dfe257d
--- /dev/null
+++ b/arch/arm64/boot/dts/allwinner/overlays/sun50i-a64-gy-pcm5102-sound.dts
@@ -0,0 +1,34 @@
+/dts-v1/;
+/plugin/;
+
+/ {
+	compatible = "allwinner,sun50i-a64";
+
+	fragment@0 {
+		target = <&i2s0>;
+		__overlay__ {
+			pinctrl-names = "default", "default";
+			pinctrl-0 = <&i2s0_pins_bclk>, <&i2s0_pins_lrck>,
+				    <&i2s0_pins_do0>;
+			pinctrl-1 = <&i2s0_pins_mclk>;
+			status = "okay";
+		};
+	};
+
+	fragment@1 {
+		target-path = "/soc/";
+		__overlay__ {
+			pcm5102: pcm5102a-i2s@0 {
+				compatible = "ti,pcm5102a";
+				status = "okay";
+			};
+
+			sound-pcm5102 {
+				compatible = "orpaltech,gy-pcm5102-sound";
+				cpu-node = <&i2s0>;
+				codec-node = <&pcm5102>;
+				status = "okay";
+                        };
+                };
+	};
+};
diff --git a/arch/arm64/boot/dts/allwinner/overlays/sun50i-a64-no-hdmi.dts b/arch/arm64/boot/dts/allwinner/overlays/sun50i-a64-no-hdmi.dts
new file mode 100644
index 0000000..981fce9
--- /dev/null
+++ b/arch/arm64/boot/dts/allwinner/overlays/sun50i-a64-no-hdmi.dts
@@ -0,0 +1,20 @@
+/dts-v1/;
+/plugin/;
+
+/ {
+	compatible = "allwinner,sun50i-a64";
+
+	fragment@0 {
+		target = <&hdmi>;
+		__overlay__ {
+			status = "disabled";
+		};
+	};
+
+	fragment@1 {
+		target = <&tcon1>;
+		__overlay__ {
+			status = "disabled";
+		};
+	};
+};
diff --git a/arch/arm64/boot/dts/allwinner/overlays/sun50i-a64-nrf24-spi.dts b/arch/arm64/boot/dts/allwinner/overlays/sun50i-a64-nrf24-spi.dts
new file mode 100644
index 0000000..3ceb85e
--- /dev/null
+++ b/arch/arm64/boot/dts/allwinner/overlays/sun50i-a64-nrf24-spi.dts
@@ -0,0 +1,86 @@
+#include <dt-bindings/gpio/gpio.h>
+#include <dt-bindings/interrupt-controller/irq.h>
+
+/dts-v1/;
+/plugin/;
+
+/ {
+	compatible = "allwinner,sun50i-a64";
+
+	fragment@0 {
+		target = <&pio>;
+		__overlay__ {
+			nrf0_irq_pin: nrf0_irq_pin {
+				pins = "PH7";		/*pin 18 on 40-pin GPIO connector*/
+				function = "gpio_in";
+			};
+
+			nrf0_ce_pin: nrf0_ce_pin {
+				pins = "PB1";		/*pin 22 on 40-pin GPIO connector */
+				function = "gpio_out";
+			};
+
+			nrf1_irq_pin: nrf1_irq_pin {
+				pins = "PH10";
+				function = "gpio_in";
+			};
+
+			nrf1_ce_pin: nrf1_ce_pin {
+				pins = "PH11";
+				function = "gpio_out";
+			};
+		};
+	};
+
+	fragment@1 {
+		target = <&spi0>;
+		__overlay__ {
+			#address-cells = <1>;
+			#size-cells = <0>;
+
+			nrf24 {
+				compatible = "nordic,nrf24";
+				reg = <0>;
+
+				spi-max-frequency = <5000000>;
+
+				pinctrl-names = "default";
+				pinctrl-0 = <&nrf0_irq_pin>;
+
+				interrupt-parent = <&pio>;
+				interrupts = <7 7 IRQ_TYPE_EDGE_FALLING>;
+
+				irq-gpios = <&pio 7 7 0>;	/*PH7*/
+				ce-gpios = <&pio 1 1 0>;	/*PB1*/
+
+				status = "disabled";
+			};
+		};
+	};
+
+	fragment@2 {
+		target = <&spi1>;
+		__overlay__ {
+			#address-cells = <1>;
+			#size-cells = <0>;
+
+			nrf24 {
+				compatible = "nordic,nrf24";
+				reg = <0>;
+
+				spi-max-frequency = <5000000>;
+
+				pinctrl-names = "default";
+				pinctrl-0 = <&nrf1_irq_pin>;
+
+				interrupt-parent = <&pio>;
+				interrupts = <7 10 IRQ_TYPE_EDGE_FALLING>;
+
+				irq-gpios = <&pio 7 10 0>;	/*PH10*/
+				ce-gpios = <&pio 7 11 0>;	/*PH11*/
+
+				status = "disabled";
+			};
+		};
+	};
+};
diff --git a/arch/arm64/boot/dts/allwinner/overlays/sun50i-a64-r_pwm.dts b/arch/arm64/boot/dts/allwinner/overlays/sun50i-a64-r_pwm.dts
new file mode 100644
index 0000000..efa0fce
--- /dev/null
+++ b/arch/arm64/boot/dts/allwinner/overlays/sun50i-a64-r_pwm.dts
@@ -0,0 +1,13 @@
+/dts-v1/;
+/plugin/;
+
+/ {
+	compatible = "allwinner,sun50i-a64";
+
+	fragment@0 {
+		target = <&r_pwm>;
+		__overlay__ {
+			status = "okay";
+		};
+	};
+};
diff --git a/arch/arm64/boot/dts/allwinner/overlays/sun50i-a64-waveshare35-drm.dts b/arch/arm64/boot/dts/allwinner/overlays/sun50i-a64-waveshare35-drm.dts
new file mode 100644
index 0000000..d11f7bc
--- /dev/null
+++ b/arch/arm64/boot/dts/allwinner/overlays/sun50i-a64-waveshare35-drm.dts
@@ -0,0 +1,70 @@
+#include <dt-bindings/gpio/gpio.h>
+#include <dt-bindings/interrupt-controller/irq.h>
+
+/dts-v1/;
+/plugin/;
+
+/ {
+	compatible = "allwinner,sun50i-a64";
+
+	fragment@0 {
+		target = <&pio>;
+		__overlay__ {
+			ws35_irq: ws35_irq_pin {
+				pins = "PB0";		/*pin 11 on 40-pin GPIO connector*/
+				function = "gpio_in";
+			};
+			ws35_rst: ws35_rst {
+				pins = "PB1";		/*pin 22 on 40-pin GPIO connector*/
+				function = "gpio_out";
+			};
+			ws35_dc: ws35_dc {
+				pins = "PH7";		/*pin 18 on 40-pin GPIO connector*/
+				function = "gpio_out";
+			};
+		};
+	};
+
+	fragment@1 {
+		target = <&spi0>;
+		__overlay__ {
+			/* needed to avoid dtc warning */
+			#address-cells = <1>;
+			#size-cells = <0>;
+
+			ws35_lcd: ws35-lcd@0 {
+				compatible = "waveshare,rpi-lcd-35",
+					     "ilitek,ili9486";
+				reg = <0>;
+
+				spi-max-frequency = <20000000>;
+
+				pinctrl-names = "default";
+				pinctrl-0 = <&ws35_irq &ws35_rst &ws35_dc>;
+
+				reset-gpios = <&gpio 25 0>;
+				dc-gpios = <&gpio 24 0>;
+				rotation = <0>;
+
+				status = "disabled";
+			};
+
+			ws35_ts: ws35-ts@1 {
+				compatible = "ti,ads7846";
+				reg = <1>;
+
+				spi-max-frequency = <2000000>;
+
+				interrupt-parent = <&pio>;
+				interrupts = <7 10 IRQ_TYPE_EDGE_FALLING>;
+
+				pendown-gpios = <&gpio 17 0>;
+
+				ti,x-plate-ohms = /bits/ 16 <60>;
+				ti,pressure-max = /bits/ 16 <255>;
+
+				status = "disabled";
+			};
+		};
+	};
+};
-- 
2.17.1

