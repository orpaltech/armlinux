Booting from an SD card
-----------------------

If your kernel uses Device Tree (it is true for a default upstream kernel image):
---
# swarren's branch already sets this automatically, so you can skip this
# Mainline U-Boot will set the following automatically soon
setenv fdtfile bcm2835-rpi-b.dtb

mmc dev 0
fatload mmc 0:1 ${kernel_addr_r} zImage
# IMPORTANT NOTE: On mainline u-boot, the correct variable to use here is ${fdt_addr} and NOT ${fdt_addr_r}
fatload mmc 0:1 ${fdt_addr_r} ${fdtfile}
setenv bootargs earlyprintk console=tty0 console=ttyAMA0 root=/dev/mmcblk0p2 rootfstype=ext4 rootwait noinitrd
# IMPORTANT NOTE: On mainline u-boot, the correct variable to use here is ${fdt_addr} and NOT ${fdt_addr_r}
bootz ${kernel_addr_r} - ${fdt_addr_r}
---

Note regarding ${fdt_addr_r} and ${fdt_addr}: In mainline U-Boot, the bootloader has been modified to not touch 
the FDT prepared by the RPi first stage bootloader. The address of this FDT is stored in the variable ${fdt_addr}. 
Thus, if you want to rely on the first stage bootloader to prepare the FDT, you can ignore the line 
"fatload mmc 0:1 ${fdt_addr_r} ${fdtfile}", which loads the FDT from a file, simply load the kernel as usual 
and then call "bootz ${kernel_addr_r} - ${fdt_addr}".

To boot a kernel that doesn't use Device Tree:
---
mmc dev 0
fatload mmc 0:1 ${kernel_addr_r} zImage
setenv bootargs earlyprintk console=ttyAMA0 console=tty1 root=/dev/mmcblk0p2 rootwait
bootz ${kernel_addr_r}
---
