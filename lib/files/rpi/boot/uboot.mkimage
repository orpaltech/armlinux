# DO NOT EDIT THIS FILE
#
# Please edit /boot/firmware/bootEnv.txt to set supported parameters
#

setenv overlay_error "false"
setenv kernel_file "linuz.img"

setenv load_addr "0x2000000"
setenv fdt_addr "0x2600000"

# Set device tree file
setenv dtb_file "board.dtb"

if test -e mmc 0:1 ${prefix}bootEnv.txt; then
    fatload mmc 0:1 ${load_addr} ${prefix}bootEnv.txt
    env import -t ${load_addr} ${filesize}
fi

# Tell Linux that it is booting on a Raspberry Pi2/3
setenv machid 0x00000c42

# Set the kernel boot command line
setenv bootargs "${extraargs}"

# Load the existing Linux kernel into RAM
fatload mmc 0:1 ${kernel_addr_r} ${prefix}${kernel_file}
fatload mmc 0:1 ${fdt_addr} ${prefix}${dtb_file}
# fatload mmc 0:1 ${ramdisk_addr_r} ${initramfs}

fdt addr ${fdt_addr}
fdt resize 65536

for overlay_file in ${overlays}; do
    if fatload mmc 0:1 ${load_addr} ${prefix}overlays/${overlay_prefix}-${overlay_file}.dtbo; then
        echo "Applying kernel provided DT overlay ${overlay_prefix}-${overlay_file}.dtbo"
        fdt apply ${load_addr} || setenv overlay_error "true"
    fi
done

if test "${overlay_error}" = "true"; then
    echo "Error applying DT overlays, restoring original DT"
    fatload mmc 0:1 ${fdt_addr} ${prefix}${dtb_file}
else
    if test -e mmc 0:1 ${prefix}overlays/${overlay_prefix}-fixup.scr; then
        fatload mmc 0:1 ${load_addr} ${prefix}overlays/${overlay_prefix}-fixup.scr
        echo "Applying kernel provided DT fixup script (${overlay_prefix}-fixup.scr)"
        source ${load_addr}
    fi
    if test -e mmc 0:1 ${prefix}fixup.scr; then
        fatload mmc 0:1 ${load_addr} ${prefix}fixup.scr
        echo "Applying user provided fixup script (fixup.scr)"
        source ${load_addr}
    fi
fi

# Boot the kernel we have just loaded
