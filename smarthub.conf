# -------------------------------------------------------------------------------------------------------------------------------------
#					Armlinux build configuration for SmartHome Hub devices
#######################################################################################################################################


# ------------------------------------------------------- Main options ----------------------------------------------------------------

DESCRIPTION="Flash-card image for SmartHome Hub devices"

# This configuration product version
PROD_VERSION="1.0"
# Leave blank to auto-generate the build number
PROD_BUILD=0

# The list of boards supported by this configuration. Leave it blank to allow all boards.
BOARDS_SUPPORTED="rpi-cm4-io-nvme-arm64,rpi-cm4-io-sd-arm64"

# Board to build image for. Leave it blank to select a board from the list.
BOARD=${BOARD:=""}

MAINTAINER_NAME="ORPALTECH,Inc."
MAINTAINER_EMAIL="ssuloev@orpaltech.ru"

# Base directory to build extra packages in. Make sure you have enough space.
BUILD_EXTRA_DIR=${BUILD_EXTRA_DIR:="/home/sergey/Projects/orpaltech"}

# Type of the root file system (debian, busybox, etc)
ROOTFS=debian

# Debian release: use "bullseye", "bookworm" etc.
DEBIAN_RELEASE=${DEBIAN_RELEASE:="bookworm"}

# List of targets to clean, comma separated component names, ie: "uboot,firmware,kernel,rootfs,qt,userland,mesa"
# If specified, it will override default clean targets.
CLEAN=${CLEAN:=""}
# Configuration-specific clean targets in addition to default, space separated.
CLEAN_OPTIONS=${CLEAN_OPTIONS:=""}

# ------------------------------------------------------ Toolchain options ------------------------------------------------------------

# 'yes' to force update all toolchains, leave value blank (or say 'no') for default
TOOLCHAIN_FORCE_UPDATE=${TOOLCHAIN_FORCE_UPDATE:=""}

# ---------------------------------------------------- Image creation options ---------------------------------------------------------

# destination to write a image to, possible values are "sd" or "img", defaults to "img"
#DEST_DEV_TYPE=
# destination Flash-card device in form /dec/sdX, required. Defaults to /dev/mmcblk0
#DEST_BLOCK_DEV=

# leave blank to use default values
DEST_IMG_PREFIX=
DEST_VERSION=


# ------------------------------------------------------ U-Boot source code -----------------------------------------------------------

UBOOT_RELEASE="v2024.07"
UBOOT_REPO_NAME="denx"
UBOOT_REPO_URL="git@source.denx.de:u-boot/u-boot.git"
#"https://source.denx.de/u-boot/u-boot.git"
# you can directly specify a branch to checkout, or leave it blank to use master
UBOOT_REPO_BRANCH=
# you can directly specify a git tag to checkout, or say "no" to disable checking out the default tag
UBOOT_REPO_TAG=

# say "yes" to disable u-boot patches
UBOOT_PATCH_DISABLE=

# It is a directory located in 'patch/u-boot' containing high-priority patches to apply.
# A high-priority patch has precedence over a normal-priority patch (in case of a file name collision).
# Leave it blank to make the framework search for a release-specific directory, i.e. 'patch/u-boot/v2020.10'.
UBOOT_PATCH_HIGH_PRIORITY_DIR=


# ------------------------------------------------------ Kernel source code -----------------------------------------------------------

KERNEL_VER_MAJOR=6
KERNEL_VER_MINOR=12
KERNEL_VER_BUILD=-rc4
KERNEL_REPO_NAME="stable"
KERNEL_REPO_URL="git://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git"
# KERNEL_REPO_NAME="next"
# KERNEL_REPO_URL="git://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git"
# You can directly specify a branch to checkout, or leave it blank to use master
KERNEL_REPO_BRANCH=
# You can directly specify a git tag to checkout, or leave it blank to use the default tag
KERNEL_REPO_TAG=
# KERNEL_REPO_TAG="next-20201118"

# say "yes" to disable kernel patches
KERNEL_PATCH_DISABLE=

# It is a directory located under 'patch/kernel/${KERNEL_REPO_NAME}' containing high-priority patches to apply.
# High-priority patches have precedence over normal-priority patches (only in case of a file name collision).
# Leave it blank to make framework search for the release-specific directory, i.e. 'patch/kernel/${KERNEL_REPO_NAME}/v4.20'.
KERNEL_PATCH_HIGH_PRIORITY_DIR=

KERNEL_INSTALL_HEADERS=
# say "yes" to deploy kernel sources to /usr/src/linux, or leave it blank for default behavior
KERNEL_INSTALL_SOURCE=no

KERNEL_MAKE_DEB_PKG=

KERNEL_DEB_COMPRESS=

# say "yes" to enable kbuild verbose output
KERNEL_VERBOSE=

# ------------------------------------------------------- Logging options -------------------------------------------------------------

# Enable DRM debug output, the value range: 0x0 - no output,.., 0x3f - verbose output
DRM_DEBUG=0x1f

DMESG_BUF_LEN=65536

# Allows reading kernel boot messages by inserting a short delay after each one
BOOT_PRINTK_DELAY=0

# -------------------------------------------------- Network and security options -----------------------------------------------------

# The global Wi-Fi switch, say "yes" to enable Wi-Fi (if supported by your board)
ENABLE_WLAN=no
# For sake of security, use a file named "wlan" to store WLAN connection info
WLAN_SSID=              
WLAN_PASSWD=

# List of network interfaces (comma-separated) to shutdown at boot time
SHUTDOWN_NETWORK_IFACES=

# Desired host name, or blank to automatically generate it
HOST_NAME=

# "yes" to create a extra-user
ENABLE_USER=yes
USER_NAME="admin"
PASSWORD="smarthub"

# ------------------------------------------------ Options to control Debian packages -------------------------------------------------

#APT_SERVER="ftp.ru.debian.org"
APT_SERVER="deb.debian.org"

ENABLE_REDUCE=yes
DEBIAN_MINBASE=no
DEBIAN_NONFREE=yes
ENABLE_SSHD=yes
ENABLE_IPTABLES=yes
ENABLE_IFNAMES=yes
ENABLE_SOUND=yes
ENABLE_BLUETOOTH=yes

# Extra packages to include with debian debootstrap
APT_CONFIG_INCLUDES="curl,wget,gnupg,zlib1g-dev,apparmor,jq,libzstd-dev,libpng-dev,libjpeg-dev,libtiff5-dev,libfontconfig1-dev"\
",libfreetype6-dev,libharfbuzz-dev,libicu-dev,libudev-dev,libi2c-dev"\
",libconfig-dev,libmtd-dev,libubi-dev,libjson-c-dev,libwolfssl-dev"

APT_CONFIG_INCLUDES_bullseye=liblua50-dev
APT_CONFIG_INCLUDES_bookworm=liblua5.4-dev

APT_CONFIG_EXCLUDES=

# Extra packages to install with apt-get utility
APT_CONFIG_PACKAGES="network-manager"

# ---------------------------------------------------- Miscellaneous options ----------------------------------------------------------
DEFLOCAL="ru_RU.UTF-8"

QT_UPDATE_SOURCES=
QT_FORCE_REBUILD=
